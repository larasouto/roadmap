package org.jhipster.student.enrolment.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EnrolmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnrolmentAllPropertiesEquals(Enrolment expected, Enrolment actual) {
        assertEnrolmentAutoGeneratedPropertiesEquals(expected, actual);
        assertEnrolmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnrolmentAllUpdatablePropertiesEquals(Enrolment expected, Enrolment actual) {
        assertEnrolmentUpdatableFieldsEquals(expected, actual);
        assertEnrolmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnrolmentAutoGeneratedPropertiesEquals(Enrolment expected, Enrolment actual) {
        assertThat(expected)
            .as("Verify Enrolment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnrolmentUpdatableFieldsEquals(Enrolment expected, Enrolment actual) {
        assertThat(expected)
            .as("Verify Enrolment relevant properties")
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnrolmentUpdatableRelationshipsEquals(Enrolment expected, Enrolment actual) {
        assertThat(expected)
            .as("Verify Enrolment relationships")
            .satisfies(e -> assertThat(e.getCourse()).as("check course").isEqualTo(actual.getCourse()))
            .satisfies(e -> assertThat(e.getStudent()).as("check student").isEqualTo(actual.getStudent()));
    }
}
